[{"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\index.tsx":"1","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\reportWebVitals.ts":"2","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\App.tsx":"3","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Home.tsx":"4","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Nav.tsx":"5","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\About.tsx":"6","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Information.tsx":"7","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\AboutCard.tsx":"8","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Carousel.tsx":"9","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\ScrollableCardList.tsx":"10","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\MovieCard.tsx":"11","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\SearchBox.tsx":"12","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\AddWatchlist.tsx":"13","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\RemoveWatchlist.tsx":"14","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\MoviePage.tsx":"15","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\MoviePageCard.tsx":"16","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\WriteComment.tsx":"17","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\CommentsSection.tsx":"18","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\CommentsList.tsx":"19","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\LoginBtn.tsx":"20","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\LogoutBtn.tsx":"21"},{"size":764,"mtime":1608929792091,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1035,"mtime":1608931131052,"results":"25","hashOfConfig":"23"},{"size":6184,"mtime":1609106925619,"results":"26","hashOfConfig":"23"},{"size":1748,"mtime":1609099248443,"results":"27","hashOfConfig":"23"},{"size":1642,"mtime":1607849712568,"results":"28","hashOfConfig":"23"},{"size":741,"mtime":1607844849961,"results":"29","hashOfConfig":"23"},{"size":559,"mtime":1607899148398,"results":"30","hashOfConfig":"23"},{"size":2732,"mtime":1607897597456,"results":"31","hashOfConfig":"23"},{"size":1037,"mtime":1609039026242,"results":"32","hashOfConfig":"23"},{"size":1290,"mtime":1609098619667,"results":"33","hashOfConfig":"23"},{"size":914,"mtime":1609024148277,"results":"34","hashOfConfig":"23"},{"size":890,"mtime":1609098116005,"results":"35","hashOfConfig":"23"},{"size":900,"mtime":1608054667462,"results":"36","hashOfConfig":"23"},{"size":2159,"mtime":1609019865042,"results":"37","hashOfConfig":"23"},{"size":7034,"mtime":1609107654764,"results":"38","hashOfConfig":"23"},{"size":2541,"mtime":1609106284744,"results":"39","hashOfConfig":"23"},{"size":405,"mtime":1609105322282,"results":"40","hashOfConfig":"23"},{"size":2699,"mtime":1609106256898,"results":"41","hashOfConfig":"23"},{"size":270,"mtime":1608865758742,"results":"42","hashOfConfig":"23"},{"size":286,"mtime":1608865814580,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1fgdrbc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\index.tsx",[],["95","96"],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\reportWebVitals.ts",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\App.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Home.tsx",["97","98","99","100"],"import * as React from 'react'\r\nimport { MovieCardContent } from '../types/types.d'\r\nimport { Carousel } from './Carousel'\r\nimport { ScrollableCardList } from './ScrollableCardList'\r\nimport { SearchBox } from './SearchBox'\r\nimport { AddWatchlist } from './AddWatchlist'\r\nimport { RemoveWatchlist } from './RemoveWatchlist'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\n\r\n\r\nexport const Home = () => {\r\n\r\n    const { user, isAuthenticated, loginWithRedirect } = useAuth0();\r\n    \r\n    let defaultMovieCards: Array<MovieCardContent> = []\r\n    const [popularMovieCards, setPopularMovieCards]: [Array<MovieCardContent>, (movieCards:Array<MovieCardContent>) => void] = React.useState(\r\n        defaultMovieCards\r\n    );\r\n    const [searchMovieCards, setSearchMovieCards]: [Array<MovieCardContent>, (movieCards:Array<MovieCardContent>) => void] = React.useState(\r\n        defaultMovieCards\r\n    );\r\n    const [watchlistMovieCards, setWatchlistMovieCards]: [Array<MovieCardContent>, (movieCards:Array<MovieCardContent>) => void] = React.useState(\r\n        defaultMovieCards\r\n    );\r\n    \r\n    const [searchValue, setSearchValue]: [string, (searchValue: string) => void] = React.useState('');\r\n\r\n    const getMoviesRequest = async (searchValue: string, setMovieCards: (movieCards:Array<MovieCardContent>) => void) => {\r\n        const api_url = `http://www.omdbapi.com/?s=${searchValue}&apikey=c4ca4c7d`;\r\n        const response = await fetch(api_url);\r\n        const responseJson = await response.json()\r\n\r\n        if(responseJson.Search){\r\n            setMovieCards(responseJson.Search)\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        getMoviesRequest(searchValue, setSearchMovieCards);\r\n    }, [searchValue]);\r\n    React.useEffect(() => {\r\n        getMoviesRequest('Star wars', setPopularMovieCards);\r\n    }, []);\r\n    React.useEffect(() => {\r\n        getWatchlistMovies();\r\n    }, [])\r\n\r\n    const addToWatchlist = async (movie: MovieCardContent) => {\r\n\r\n        if(isAuthenticated ){\r\n            let repeated = false;\r\n            watchlistMovieCards.map(wmovie => {\r\n                if(movie.imdbID === wmovie.imdbID){\r\n                    alert(\"The movie is alreay in your watchlist\");\r\n                    repeated = true;\r\n                    return;\r\n                }\r\n            })\r\n            if(!repeated){\r\n                const watchlistMovie: MovieCardContent = {\r\n                    userId: user.sub,\r\n                    imdbID: movie.imdbID,\r\n                    Poster: movie.Poster,\r\n                    Title: movie.Title,\r\n                    eventdate: (new Date()).toString()\r\n                }\r\n                console.log(JSON.stringify(watchlistMovie))\r\n                const api_url = `${process.env.REACT_APP_BACKEND_SERVER_URL}Watchlists`;\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify(watchlistMovie)\r\n                }\r\n                const response = await fetch(api_url, requestOptions);\r\n                const responseJson = await response.json();\r\n                if(responseJson){\r\n                    //const newWatchlist = [...watchlistMovieCards, responseJson];\r\n                    getWatchlistMovies()\r\n                }else{\r\n                    alert(\"An error ocurred while saving to your watchlist\")\r\n                }\r\n            }\r\n        }   \r\n    };\r\n\r\n    const removeFromWatchlist = async (movie:MovieCardContent) => {\r\n        if(isAuthenticated){\r\n\r\n            const api_url = `${process.env.REACT_APP_BACKEND_SERVER_URL}Watchlists/${movie.id}`;\r\n            const requestOptions = {\r\n                method: 'DELETE',\r\n                headers: {},\r\n                body: ''\r\n            }\r\n            const response = await fetch(api_url, requestOptions);\r\n            const responseJson = await response.json();\r\n            if(responseJson){\r\n                getWatchlistMovies();\r\n            }else{\r\n                alert(\"An error ocurred while removing from your watchlist\")\r\n            }\r\n        }   \r\n    }\r\n\r\n    const getWatchlistMovies = async () => {\r\n        console.log(process.env.REACT_APP_BACKEND_SERVER_URL)\r\n        if(isAuthenticated){\r\n            const api_url = `${process.env.REACT_APP_BACKEND_SERVER_URL}Watchlists?userID=${user.sub}`;\r\n            const response = await fetch(api_url);\r\n            const responseJson = await response.json();\r\n            console.log(responseJson)\r\n            if(responseJson){\r\n                let watchlist: Array<MovieCardContent> = [];\r\n                for(let i=0; i < responseJson.length; i++){\r\n                    const element: MovieCardContent = {\r\n                        id: responseJson[i].id,\r\n                        userId: responseJson[i].userId,\r\n                        imdbID: responseJson[i].imdbId,\r\n                        Title: responseJson[i].title,\r\n                        Poster: responseJson[i].poster,\r\n                        eventdate: responseJson[i].eventdate\r\n                    }\r\n                    watchlist = [...watchlist, element]\r\n                }\r\n                watchlist.sort((a, b) => ((new Date(a.eventdate!)) > (new Date(b.eventdate!)) ? 1 : -1))\r\n                const finalList: Array<MovieCardContent> = []\r\n                \r\n                setWatchlistMovieCards(watchlist);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n    <div>\r\n        <Carousel/>\r\n        <h3 className=\"mx-5 text-white mt-3\">Popular Films</h3>\r\n        <ScrollableCardList movies={popularMovieCards} watchlist={AddWatchlist} watchlistClickHandler={isAuthenticated ? addToWatchlist : loginWithRedirect}/>\r\n        <SearchBox searchValue={searchValue} setSearchValue={setSearchValue}/>\r\n        <ScrollableCardList movies={searchMovieCards} watchlist={AddWatchlist} watchlistClickHandler={isAuthenticated ? addToWatchlist : loginWithRedirect}/>\r\n        <h3 className=\"mx-5 text-white mt-3\">Watchlist</h3>\r\n        <ScrollableCardList movies={watchlistMovieCards} watchlist={RemoveWatchlist} watchlistClickHandler={removeFromWatchlist}/>\r\n    </div>\r\n    );\r\n}\r\n","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Nav.tsx",["101","102","103","104"],"import * as React from 'react'\r\nimport filmlogo from '../camera-reels-fill-white.svg'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport { LoginBtn } from './LoginBtn'\r\nimport { LogoutBtn } from './LogoutBtn'\r\n\r\nexport const Nav = () => {\r\n    const { user, isAuthenticated, isLoading, loginWithRedirect } = useAuth0();\r\n    console.log(isAuthenticated);\r\n    console.log(isLoading);\r\n    console.log(user)\r\n    React.useEffect(() => {\r\n        const checkAuth = async () => {\r\n            console.log(\"Authenticated: \", isAuthenticated)\r\n        }\r\n        if(!isLoading){\r\n            checkAuth()\r\n        }\r\n    }, [isLoading])\r\n    return(\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n            <a href=\"/\" className=\"navbar-brand\">MovieRatings</a><img src={filmlogo} alt=\"\"/>\r\n            <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarmenu\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarmenu\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    {isAuthenticated ? \r\n                        <li className=\"nav-item\"> \r\n                            <a className=\"nav-link\">Logged as: {user.name}</a>\r\n                        </li>: \r\n                        <h4></h4>\r\n                    }\r\n                    <li className=\"nav-item\">\r\n                        <a href=\"/About\" className=\"nav-link\">About</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        {isAuthenticated ? <LogoutBtn/> : <LoginBtn/>}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\About.tsx",["105"],"import * as React from 'react'\r\nimport { Information } from './Information'\r\nimport { AboutCard } from './AboutCard'\r\nimport starlogo from '..//star-half.svg'\r\nimport filmlogo from '..//camera-reels-fill.svg'\r\nimport commentlogo from '..//chat-left-text-fill.svg'\r\nimport { AboutCardContent } from '../types/types.d'\r\n\r\nexport const About = () => {\r\n\r\n    React.useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    let defaultAboutCards: Array<AboutCardContent> = [\r\n        {\r\n            text: \"Rate any movie you've ever watched\",\r\n            image: starlogo,\r\n            img_alt: \"Star Logo\"\r\n        }, \r\n        {\r\n            text: \"Films from every genre\",\r\n            image: filmlogo,\r\n            img_alt: \"Film Logo\"\r\n        },\r\n        {\r\n            text: \"Comment and discuss your opinions with people form around the globe\",\r\n            image: commentlogo,\r\n            img_alt: \"Comment Logo\"\r\n        }\r\n    ]\r\n\r\n    const [aboutCards, setAboutCard]: [Array<AboutCardContent>, (aboutCards:Array<AboutCardContent>) => void] = React.useState(\r\n        defaultAboutCards\r\n    );\r\n\r\n    return(\r\n        <div>\r\n            <Information/>\r\n            <div className=\"album py-5 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card-deck\">\r\n                            {aboutCards.map(card => (\r\n                                <AboutCard content={card}/>                            \r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Information.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\AboutCard.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\Carousel.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\ScrollableCardList.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\MovieCard.tsx",["106"],"import * as React from 'react'\r\nimport { isPropertySignature } from 'typescript';\r\nimport { Link } from 'react-router-dom'\r\nimport { MovieCardContent } from '../types/types.d'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\ntype MovieCardProps = {\r\n    movie: MovieCardContent\r\n    watchlist?: React.ElementType\r\n    watchlistClickHandler: (movie: MovieCardContent) => void\r\n}\r\n\r\nexport const MovieCard = (props: MovieCardProps) => {\r\n\r\n    const { isAuthenticated } = useAuth0();\r\n\r\n    const WatchlistComponent = props.watchlist ?? 'h2';\r\n    return(\r\n        <div className=\"card mb-4 box-shadow  bg-dark\">\r\n            <div className=\"card-body text-center\">\r\n                <Link to={`/${props.movie.imdbID}`}>\r\n                    <img className=\"card-img-top\" src={props.movie.Poster} alt={props.movie.Title}/>\r\n                </Link>\r\n                <p className=\"card-text text-white mt-2\">{props.movie.Title}</p>\r\n            </div>\r\n            <div \r\n                className=\"overlay d-flex align-items-center justify-content-center\"\r\n                onClick={() => (props.watchlistClickHandler(props.movie))}\r\n            >\r\n                <WatchlistComponent text={isAuthenticated ? \"Add to Watchlist\": \"Log In to Add\"}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\SearchBox.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\AddWatchlist.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\RemoveWatchlist.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\MoviePage.tsx",["107","108","109","110"],"import * as React from 'react'\r\nimport { MovieInfo, Reaction } from '../types/types.d'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { MoviePageCard } from './MoviePageCard'\r\nimport { CommentSection } from './CommentsSection'\r\nimport { useAuth0 } from '@auth0/auth0-react' \r\n\r\ninterface PropsMoviePage extends RouteComponentProps<PropsMovieState> {\r\n    \r\n}\r\n\r\ninterface PropsMovieState  {\r\n    idmbID: \"\"\r\n}\r\n\r\n\r\nexport const MoviePage = (props: PropsMoviePage) => {\r\n\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    const defaultMovieInfo: MovieInfo = {\r\n        Title: \"\",\r\n    Year: \"\",\r\n    Rated: \"\",\r\n    Released: \"\",\r\n    Runtime: \"\",\r\n    Genre: \"\",\r\n    Director: \"\",\r\n    Writer: \"\",\r\n    Actors: \"\",\r\n    Plot: \"\",\r\n    Language: \"\",\r\n    Country: \"\",\r\n    Awards:\"\",\r\n    Poster: \"\",\r\n    Ratings: [\r\n        {\r\n            Source: \"\",\r\n            Value: \"\"\r\n        },\r\n        {\r\n            Source: \"\",\r\n            Value: \"\"\r\n        },\r\n        {\r\n            Source: \"\",\r\n            Value: \"\"\r\n        }\r\n    ],\r\n    Metascore: \"\",\r\n    imdbRating: \"\",\r\n    imdbVotes: \"\",\r\n    imdbID: props.match.params.idmbID,\r\n    Type: \"\",\r\n    DVD: \"\",\r\n    BoxOffice: \"\",\r\n    Production: \"\",\r\n    Website: \"\",\r\n    Response: \"\"\r\n    }\r\n\r\n    const [movieInfoCard, setMovieInfoCard]: [MovieInfo, (movieCard: MovieInfo) => void] = React.useState(\r\n        defaultMovieInfo\r\n    )\r\n\r\n    const getMovieRequest = async (idmbID: string) => {\r\n        const api_url = `http://www.omdbapi.com/?i=${idmbID}&plot=full&apikey=c4ca4c7d`;\r\n        const response = await fetch(api_url);\r\n        const responseJson = await response.json();\r\n\r\n        console.log(responseJson)\r\n        if(responseJson){\r\n            setMovieInfoCard(responseJson);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getMovieRequest(props.match.params.idmbID)\r\n    }, []);\r\n \r\n    return(\r\n        <div className=\"container py-5\">\r\n                <MoviePageCard\r\n                    movie={movieInfoCard} \r\n                />\r\n                <CommentSection idmbID={props.match.params.idmbID}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\MoviePageCard.tsx",["111","112"],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\WriteComment.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\CommentsSection.tsx",[],"D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\CommentsList.tsx",["113"],"import * as React from 'react'\r\nimport { Comment } from '../types/types.d'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\ntype CommentsListProps = {\r\n    imdbID: string\r\n}\r\n\r\nexport const CommentsList = (props: CommentsListProps) => {\r\n\r\n    const { user, isAuthenticated } = useAuth0();\r\n\r\n    let defaultCommentList: Array<Comment> = []\r\n\r\n    const [commentsList, setCommentsList]: [Array<Comment>, (commentsList: Array<Comment>) => void] = React.useState(\r\n        defaultCommentList\r\n    ) \r\n\r\n    const getComments = async (imdbID: string) => {\r\n            const api_url = `${process.env.REACT_APP_BACKEND_SERVER_URL}Comments?imdbID=${imdbID}`;\r\n            const response = await fetch(api_url);\r\n            const responseJson = await response.json();\r\n            if(responseJson){\r\n                const comments: Array<Comment> = responseJson;\r\n                comments.sort((a, b) => ((new Date(a.eventdate)) > (new Date(b.eventdate)) ? 1 : -1))\r\n                setCommentsList(comments);\r\n            }\r\n    }\r\n\r\n    const deleteComment = async (id: string) => {\r\n        const api_url = `${process.env.REACT_APP_BACKEND_SERVER_URL}Comments/${id}`\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {},\r\n            body: ''\r\n        }\r\n        const response = await fetch(api_url, requestOptions);\r\n        const responseJson = response.json();\r\n        if(responseJson){\r\n            alert(\"Your comment has been successfully removed\");\r\n            window.location.reload();\r\n        }else{\r\n            alert(\"An error ocurred while removing your comment\");\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getComments(props.imdbID);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            {commentsList.map(comment => (\r\n                <div className=\"row d-flex justify-content-center\" id={comment.id} key={comment.id}>\r\n                    <div className=\"card col-md-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{comment.username}</h5>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{(new Date(comment.eventdate)).toLocaleString()}</h6>\r\n                            <p className=\"card-text text-left\">{comment.comment1}</p>\r\n                            {isAuthenticated && comment.userId === user.sub ? (\r\n                                <button className=\"btn bg-danger text-light\" onClick={() => deleteComment(comment.id!)}>Delete</button>\r\n                            ):''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\LoginBtn.tsx",["114"],"import * as React from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\n\r\nexport const LoginBtn = () => {\r\n    const { loginWithRedirect } = useAuth0();\r\n\r\n    return (\r\n        <a onClick={() => loginWithRedirect()} className=\"nav-link\">Log In</a>\r\n    );\r\n\r\n}","D:\\jorge\\Documents\\Universidad\\Práctica Profesional\\Acklen Avenue\\MovieRatingWebsite\\movie-rating\\src\\components\\LogoutBtn.tsx",["115"],"import * as React from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\n\r\nexport const LogoutBtn = () => {\r\n    const { logout } = useAuth0();\r\n\r\n    return (\r\n        <a onClick={() => logout({ returnTo: window.location.origin })} className=\"nav-link\">Log Out</a>\r\n    );\r\n\r\n}",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":47,"column":8,"nodeType":"122","endLine":47,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":53,"column":44,"nodeType":"126","messageId":"127","endLine":53,"endColumn":46},{"ruleId":"124","severity":1,"message":"128","line":57,"column":21,"nodeType":"129","messageId":"130","endLine":57,"endColumn":28},{"ruleId":"131","severity":1,"message":"132","line":127,"column":23,"nodeType":"133","messageId":"134","endLine":127,"endColumn":57},{"ruleId":"131","severity":1,"message":"135","line":8,"column":47,"nodeType":"133","messageId":"134","endLine":8,"endColumn":64},{"ruleId":"120","severity":1,"message":"136","line":19,"column":8,"nodeType":"122","endLine":19,"endColumn":19,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":30,"column":29,"nodeType":"140","endLine":30,"endColumn":53},{"ruleId":"141","severity":1,"message":"142","line":32,"column":25,"nodeType":"140","endLine":32,"endColumn":29},{"ruleId":"131","severity":1,"message":"143","line":33,"column":24,"nodeType":"133","messageId":"134","endLine":33,"endColumn":36},{"ruleId":"131","severity":1,"message":"144","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":29},{"ruleId":"131","severity":1,"message":"145","line":2,"column":21,"nodeType":"133","messageId":"134","endLine":2,"endColumn":29},{"ruleId":"131","severity":1,"message":"146","line":19,"column":13,"nodeType":"133","messageId":"134","endLine":19,"endColumn":17},{"ruleId":"131","severity":1,"message":"147","line":19,"column":19,"nodeType":"133","messageId":"134","endLine":19,"endColumn":34},{"ruleId":"120","severity":1,"message":"148","line":81,"column":8,"nodeType":"122","endLine":81,"endColumn":10,"suggestions":"149"},{"ruleId":"124","severity":1,"message":"128","line":98,"column":51,"nodeType":"126","messageId":"150","endLine":98,"endColumn":53},{"ruleId":"120","severity":1,"message":"151","line":115,"column":8,"nodeType":"122","endLine":115,"endColumn":10,"suggestions":"152"},{"ruleId":"120","severity":1,"message":"153","line":49,"column":8,"nodeType":"122","endLine":49,"endColumn":10,"suggestions":"154"},{"ruleId":"138","severity":1,"message":"139","line":9,"column":9,"nodeType":"140","endLine":9,"endColumn":69},{"ruleId":"138","severity":1,"message":"139","line":9,"column":9,"nodeType":"140","endLine":9,"endColumn":94},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getWatchlistMovies'. Either include it or remove the dependency array.","ArrayExpression",["157"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","@typescript-eslint/no-unused-vars","'finalList' is assigned a value but never used.","Identifier","unusedVar","'loginWithRedirect' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.",["158"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'setAboutCard' is assigned a value but never used.","'isPropertySignature' is defined but never used.","'Reaction' is defined but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.match.params.idmbID'. Either include it or remove the dependency array.",["159"],"expectedInside","React Hook React.useEffect has missing dependencies: 'getMovieReactions' and 'props.movie.imdbID'. Either include them or remove the dependency array.",["160"],"React Hook React.useEffect has a missing dependency: 'props.imdbID'. Either include it or remove the dependency array.",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [getWatchlistMovies]",{"range":"172","text":"173"},"Update the dependencies array to be: [isAuthenticated, isLoading]",{"range":"174","text":"175"},"Update the dependencies array to be: [props.match.params.idmbID]",{"range":"176","text":"177"},"Update the dependencies array to be: [getMovieReactions, props.movie.imdbID]",{"range":"178","text":"179"},"Update the dependencies array to be: [props.imdbID]",{"range":"180","text":"181"},[1891,1893],"[getWatchlistMovies]",[622,633],"[isAuthenticated, isLoading]",[1899,1901],"[props.match.params.idmbID]",[3799,3801],"[getMovieReactions, props.movie.imdbID]",[1710,1712],"[props.imdbID]"]